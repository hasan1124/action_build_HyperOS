name: Xiaomi HyperOS - Sagit
on:
  workflow_dispatch:
    inputs:
      build_matrix:
        description: "Cihaz listesini virgülle ayırarak belirtin"
        type: string
        default: "sagit"
        required: true
      ORIGIN_URL:
        description: https://mega.nz/file/r8kAGaID#pTNKgEV4-Xhm4A229dzsvsQk3foK2-uHHwLMCw9hqL8
        required: true
        type: string
      URL:
        description: https://netix.dl.sourceforge.net/project/xiaomi-eu-multilang-miui-roms/xiaomi.eu/HyperOS-STABLE-RELEASES/HyperOS2.0/xiaomi.eu_SUNSTONE_OS2.0.2.0.UMQCNXM_14.zip?viasf=1
        required: true
        type: string
      custom_version:
        description: "Özel sürüm numarası"
        required: true
        type: string
      pack_type:
        description: "Payload.bin dosyasını paketle"
        required: true
        type: boolean
        default: true
jobs:
  build_matrix:
    name: Yapı Matrisi Ayarla
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Yapı Matrisi Ayarla
        id: set-matrix
        run: |
          input_var="${{ github.event.inputs.build_matrix }}"
          if [ "$input_var" = "all" ]; then
            input_var="sagit"
          fi
          IFS=',' read -ra devices <<< "$input_var"
          json_output="{\"list\":["
          for device in "${devices[@]}"; do
            json_output+="{\"device\":\"$device\"},"
          done
          json_output=${json_output%,}
          json_output+="]}"
          echo "matrix=$json_output" >> $GITHUB_OUTPUT
  build:
    name: Otomatik Yapı
    runs-on: ubuntu-latest
    needs: build_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build_matrix.outputs.matrix) }}
    steps:
      - name: Gereksiz Bileşenleri Temizle
        run: |
          docker rmi `docker images -q` || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d || true
          sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
          sudo apt -y autoremove --purge || true
          sudo apt -y autoclean || true
          sudo apt clean || true
      - name: Yapı Alanını Maksimize Et ve Bağla
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 6144
          remove-dotnet: "true"
          temp-reserve-mb: 1024
          remove-android: "true"
          remove-haskell: "true"
      - name: Depoyu Çek
        uses: actions/checkout@v4.1.1
        with:
          repository: hasan1124/action_build_HyperOS
          ref: main
          token: ${{ secrets.GH_TOKEN }}
      - name: Sistem Paketini İndir
        run: |
          eval $(cat build_local_HyperOS.sh | grep "apt-get")
          sudo bash "$GITHUB_WORKSPACE"/tools/install_rclone.sh ${{ secrets.GH_TOKEN }}
          mkdir -p ~/.config/rclone/
          unzip -o -q -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone_config.zip -d ~/.config/rclone/
          device=$(echo "$MATRIX_CONTEXT" | jq -r '.list.device')
          echo "device=$device" >> "$GITHUB_ENV"
          model=$(echo "$custom_version" | cut -d"." -f5 | sed 's/^.\(..\).*$/\1/')
          if [[ "$device" == "sagit" ]]; then
            date=${custom_version//${model}/MC}
          fi
          echo "date=$date" >> "$GITHUB_ENV"
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" "$ORIGIN_URL"
      - name: TWRP İndir
        uses: robinraju/release-downloader@v1.9
        with:
          repository: hasan1124/TWRP_Backup
          tag: "twrp"
          fileName: "*sagit*"
          out-file-path: "sagit_files"
          token: ${{ secrets.GH_TOKEN }}
      - name: Otomatik Yapı
        run: |
          sudo appToken="${{ secrets.appToken }}" TMPDIR="$GITHUB_WORKSPACE"/TMPDIR user=$(whoami) bash build_local_HyperOS.sh $ORIGIN_URL $URL $device $date $pack_type
      - name: ROM Dosyasını Mega.nz'e Yükle
        run: |
          # Mega.nz CLI aracını yükleyin
          curl -sL https://github.com/tonikelope/megacmd/releases/latest/download/megacmd-linux-x64.tar.gz | tar xz
          sudo mv megacmd /usr/local/bin/
          
          # Mega.nz giriş bilgilerini ayarlayın
          mega-login ${{ secrets.MEGA_EMAIL }} ${{ secrets.MEGA_PASSWORD }}
          
          # ROM dosyasını yükleyin
          mega-put "$GITHUB_WORKSPACE"/output/ROM.zip /ROMs/
